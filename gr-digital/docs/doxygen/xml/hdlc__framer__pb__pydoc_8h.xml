<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="hdlc__framer__pb__pydoc_8h" kind="file" language="C++">
    <compoundname>hdlc_framer_pb_pydoc.h</compoundname>
    <includes refid="build_2gr-digital_2python_2digital_2bindings_2pydoc__macros_8h" local="yes">pydoc_macros.h</includes>
    <incdepgraph>
      <node id="1">
        <label>hdlc_framer_pb_pydoc.h</label>
        <link refid="hdlc__framer__pb__pydoc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pydoc_macros.h</label>
        <link refid="build_2gr-digital_2python_2digital_2bindings_2pydoc__macros_8h"/>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="hdlc__framer__pb__pydoc_8h_1a74021f021dcdfbb22891787b79c5529d" prot="public" static="no">
        <name>D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="build_2gnuradio-runtime_2python_2gnuradio_2gr_2bindings_2pydoc__macros_8h_1a4e578031ec998eaeb933d5caa6a7d28a" kindref="member">DOC</ref>(gr, digital, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/hdlc_framer_pb_pydoc.h" line="10" column="10" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/hdlc_framer_pb_pydoc.h" bodystart="10" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="hdlc__framer__pb__pydoc_8h_1af720d22751abed9e766977050ac7280d" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_hdlc_framer_pb</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_hdlc_framer_pb</name>
        <initializer>= R&quot;doc(HDLC framer which takes in PMT binary blobs and outputs HDLC frames as unpacked bits, with CRC and bit stuffing added. The first sample of the frame is tagged with the tag frame_tag_name and includes a length field for tagged_stream use.

This block outputs one whole frame at a time; if there is not enough output buffer space to fit a frame, it is pushed onto a queue. As a result flowgraphs which only run for a finite number of samples may not receive all frames in the queue, due to the scheduler&apos;s granularity. For flowgraphs that stream continuously (anything using a USRP) this should not be an issue.

Constructor Specific Documentation:

Return a shared_ptr to a new instance of digital::hdlc_framer.

Args:
    frame_tag_name : The tag to add to the first sample of each frame.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/hdlc_framer_pb_pydoc.h" line="18" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/hdlc_framer_pb_pydoc.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hdlc__framer__pb__pydoc_8h_1ae6712bf0786b8c165a0879abd3e54fdd" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_hdlc_framer_pb_hdlc_framer_pb</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_hdlc_framer_pb_hdlc_framer_pb</name>
        <initializer>= R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/hdlc_framer_pb_pydoc.h" line="30" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/hdlc_framer_pb_pydoc.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hdlc__framer__pb__pydoc_8h_1a4c53a86e7950e6ee916ea2ae0db601ab" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_hdlc_framer_pb_make</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_hdlc_framer_pb_make</name>
        <initializer>= R&quot;doc(HDLC framer which takes in PMT binary blobs and outputs HDLC frames as unpacked bits, with CRC and bit stuffing added. The first sample of the frame is tagged with the tag frame_tag_name and includes a length field for tagged_stream use.

This block outputs one whole frame at a time; if there is not enough output buffer space to fit a frame, it is pushed onto a queue. As a result flowgraphs which only run for a finite number of samples may not receive all frames in the queue, due to the scheduler&apos;s granularity. For flowgraphs that stream continuously (anything using a USRP) this should not be an issue.

Constructor Specific Documentation:

Return a shared_ptr to a new instance of digital::hdlc_framer.

Args:
    frame_tag_name : The tag to add to the first sample of each frame.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/hdlc_framer_pb_pydoc.h" line="33" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/hdlc_framer_pb_pydoc.h" bodystart="33" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/hdlc_framer_pb_pydoc.h"/>
  </compounddef>
</doxygen>
