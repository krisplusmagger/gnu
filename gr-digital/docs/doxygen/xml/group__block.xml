<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="group__block" kind="group">
    <compoundname>block</compoundname>
    <title>GNU Radio C++ Signal Processing Blocks</title>
    <innergroup refid="group__container__blk">Top Block and Hierarchical Block Base Classes    &lt;br&gt;</innergroup>
    <innergroup refid="group__audio__blk">Audio Signals</innergroup>
    <innergroup refid="group__boolean__operators__blk">Boolean Operators</innergroup>
    <innergroup refid="group__byte__operators__blk">Byte Operators</innergroup>
    <innergroup refid="group__channel__models__blk">Channel Models</innergroup>
    <innergroup refid="group__channelizers__blk">Channelizers</innergroup>
    <innergroup refid="group__coding__blk">Information Coding and Decoding</innergroup>
    <innergroup refid="group__controlport__blk">ControlPort</innergroup>
    <innergroup refid="group__debug__tools__blk">Debug Tools</innergroup>
    <innergroup refid="group__deprecated__blk">Deprecated</innergroup>
    <innergroup refid="group__equalizers__blk">Equalizers</innergroup>
    <innergroup refid="group__error__coding__blk">Error Coding and Decoding</innergroup>
    <innergroup refid="group__file__operators__blk">File Operators</innergroup>
    <innergroup refid="group__filter__blk">Filters</innergroup>
    <innergroup refid="group__fourier__analysis__blk">Fourier Analysis</innergroup>
    <innergroup refid="group__instrumentation__blk">Instrumentation Tools  &lt;br&gt;</innergroup>
    <innergroup refid="group__level__controllers__blk">Level Controllers</innergroup>
    <innergroup refid="group__math__operators__blk">Math Operators</innergroup>
    <innergroup refid="group__measurement__tools__blk">Measurement Tools</innergroup>
    <innergroup refid="group__message__tools__blk">Message Tools</innergroup>
    <innergroup refid="group__misc__blk">Miscellaneous</innergroup>
    <innergroup refid="group__modulators__blk">Modulators and Demodulators</innergroup>
    <innergroup refid="group__networking__tools__blk">Networking Tools</innergroup>
    <innergroup refid="group__ofdm__blk">OFDM Blocks</innergroup>
    <innergroup refid="group__packet__operators__blk">Packet/Frame Operators</innergroup>
    <innergroup refid="group__peak__detectors__blk">Peak Detectors</innergroup>
    <innergroup refid="group__pdu__blk">PDU Operators</innergroup>
    <innergroup refid="group__qtgui__blk">QT Graphical Interfaces</innergroup>
    <innergroup refid="group__resamplers__blk">Resamplers</innergroup>
    <innergroup refid="group__stream__operators__blk">Streams Operators</innergroup>
    <innergroup refid="group__stream__tag__tools__blk">Stream Tag Tools</innergroup>
    <innergroup refid="group__symbol__coding__blk">Symbol Coding</innergroup>
    <innergroup refid="group__synchronizers__blk">Synchronizers</innergroup>
    <innergroup refid="group__trellis__coding__blk">Trellis Coding</innergroup>
    <innergroup refid="group__type__converters__blk">Data Type Converters</innergroup>
    <innergroup refid="group__uhd__blk">UHD Interface</innergroup>
    <innergroup refid="group__waveform__generators__blk">Waveform Generators</innergroup>
    <innergroup refid="group__wavelet__blk">Wavelet Transforms</innergroup>
    <innergroup refid="group__base__blk">Base classes for GR Blocks</innergroup>
    <briefdescription>
<para>All C++ blocks that can be used in GR graphs are listed here or in the subcategories below. </para>
    </briefdescription>
    <detaileddescription>
<para><bold>Source</bold> block implements SoapySDR functionality for RX.</para>
<para><bold>Sink</bold> block implements SoapySDR functionality for RX.</para>
<para>All C++ blocks that can be used from the CUSTOMMODULE GNU Radio module are listed here or in the subcategories below.</para>
<para>Sorry, at this time the Python hierarchical blocks are not included in this index.</para>
<sect1 id="group__block_1sink">
<title>Soapy Sink</title>
<para>The soapy sink block receives samples and writes to a stream. The sink block also provides Soapy API calls for receiver settings. Includes all parameters for full RX implementation. Device is a string containing the driver and type name of the device the user wants to use according to the Soapy* module documentation. Make parameters are passed through the xml block. Some of the available parameters can be seen at Figure 2 Antenna and clock source can be left empty and default values will be used. This block has a message port, which consumes PMT messages. For a description of the command syntax, see <ref refid="page_uhd_1uhd_command_syntax" kindref="member">Command Syntax</ref>.</para>
</sect1>
<sect1 id="group__block_1source">
<title>Soapy Source</title>
<para>The soapy source block receives samples and writes to a stream. The source block also provides Soapy API calls for receiver settings. Includes all parameters for full RX implementation. Device is a string containing the driver and type name of the device the user wants to use according to the Soapy* module documentation. Make parameters are passed through the xml block. Some of the available parameters can be seen at Figure 2 Antenna and clock source can be left empty and default values will be used. This block has a message port, which consumes PMT messages. For a description of the command syntax, see <ref refid="page_uhd_1uhd_command_syntax" kindref="member">Command Syntax</ref>. </para>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
