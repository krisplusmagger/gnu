<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structcallbackregister__base" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>callbackregister_base</compoundname>
    <derivedcompoundref refid="classrpcserver__base" prot="public" virt="virtual">rpcserver_base</derivedcompoundref>
    <includes refid="rpccallbackregister__base_8h" local="no">gnuradio/rpccallbackregister_base.h</includes>
    <innerclass refid="structcallbackregister__base_1_1callback__base__t" prot="public">callbackregister_base::callback_base_t</innerclass>
    <innerclass refid="classcallbackregister__base_1_1callback__t" prot="public">callbackregister_base::callback_t</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structcallbackregister__base_1aaa5da700159ea9432baf044f1bd3786f" prot="public" static="no">
        <type><ref refid="classcallbackregister__base_1_1callback__t" kindref="compound">callback_t</ref>&lt; <ref refid="classgr_1_1messages_1_1msg__accepter" kindref="compound">gr::messages::msg_accepter</ref>, gr::messages::msg_accepter_sptr &gt;</type>
        <definition>typedef callback_t&lt;gr::messages::msg_accepter, gr::messages::msg_accepter_sptr&gt; callbackregister_base::configureCallback_t</definition>
        <argsstring></argsstring>
        <name>configureCallback_t</name>
        <qualifiedname>callbackregister_base::configureCallback_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="109" column="9" bodyfile="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcallbackregister__base_1a26829e86a28d11055814ee1a6bb1f90c" prot="public" static="no">
        <type><ref refid="classcallbackregister__base_1_1callback__t" kindref="compound">callback_t</ref>&lt; <ref refid="classgr_1_1messages_1_1msg__producer" kindref="compound">gr::messages::msg_producer</ref>, gr::messages::msg_producer_sptr &gt;</type>
        <definition>typedef callback_t&lt;gr::messages::msg_producer, gr::messages::msg_producer_sptr&gt; callbackregister_base::queryCallback_t</definition>
        <argsstring></argsstring>
        <name>queryCallback_t</name>
        <qualifiedname>callbackregister_base::queryCallback_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="111" column="9" bodyfile="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcallbackregister__base_1a7fdd2153b194fc4c0d0754613af5fda7" prot="public" static="no">
        <type><ref refid="classcallbackregister__base_1_1callback__t" kindref="compound">callback_t</ref>&lt; <ref refid="classgr_1_1messages_1_1msg__accepter" kindref="compound">gr::messages::msg_accepter</ref>, gr::messages::msg_accepter_sptr &gt;</type>
        <definition>typedef callback_t&lt;gr::messages::msg_accepter, gr::messages::msg_accepter_sptr&gt; callbackregister_base::handlerCallback_t</definition>
        <argsstring></argsstring>
        <name>handlerCallback_t</name>
        <qualifiedname>callbackregister_base::handlerCallback_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="113" column="9" bodyfile="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" bodystart="113" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structcallbackregister__base_1a4c05d278727594bdf05d222c567b38bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>callbackregister_base::callbackregister_base</definition>
        <argsstring>()</argsstring>
        <name>callbackregister_base</name>
        <qualifiedname>callbackregister_base::callbackregister_base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="115" column="5" bodyfile="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structcallbackregister__base_1a574cc1d427024846ee5db738be7a0262" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual callbackregister_base::~callbackregister_base</definition>
        <argsstring>()</argsstring>
        <name>~callbackregister_base</name>
        <qualifiedname>callbackregister_base::~callbackregister_base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="116" column="13" bodyfile="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="structcallbackregister__base_1ac6d504cd5a1cb82455757c8711b42017" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void callbackregister_base::registerConfigureCallback</definition>
        <argsstring>(const std::string &amp;id, const configureCallback_t callback)=0</argsstring>
        <name>registerConfigureCallback</name>
        <qualifiedname>callbackregister_base::registerConfigureCallback</qualifiedname>
        <reimplementedby refid="classrpcserver__thrift_1a1917b1eaf2e874745a609da121b14a57">registerConfigureCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__aggregator_1ac3ff4b6e64c2d13283669f4ac19642da">registerConfigureCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__base_1aa491e67a02853f04259ec823bca858c9">registerConfigureCallback</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="structcallbackregister__base_1aaa5da700159ea9432baf044f1bd3786f" kindref="member">configureCallback_t</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="118" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structcallbackregister__base_1a4df3061020ce40966b5cfe84802b4b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void callbackregister_base::unregisterConfigureCallback</definition>
        <argsstring>(const std::string &amp;id)=0</argsstring>
        <name>unregisterConfigureCallback</name>
        <qualifiedname>callbackregister_base::unregisterConfigureCallback</qualifiedname>
        <reimplementedby refid="classrpcserver__thrift_1aee8e18dfd4e2bc180706b97a6a0445b3">unregisterConfigureCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__aggregator_1a28d255435eec6d88c23ace71f5ed3ae2">unregisterConfigureCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__base_1a664a295c7de0083e6f3a2f3f2ab93b70">unregisterConfigureCallback</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="120" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structcallbackregister__base_1a969518669759cfbefdc9f29d8c6b2153" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void callbackregister_base::registerQueryCallback</definition>
        <argsstring>(const std::string &amp;id, const queryCallback_t callback)=0</argsstring>
        <name>registerQueryCallback</name>
        <qualifiedname>callbackregister_base::registerQueryCallback</qualifiedname>
        <reimplementedby refid="classrpcserver__thrift_1a9cf43035abfe64138074d42eb9e57ede">registerQueryCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__aggregator_1a01186a9848487c534c924125726a8297">registerQueryCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__base_1a5155052d19ead9feb69e23dee3ad091e">registerQueryCallback</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="structcallbackregister__base_1a26829e86a28d11055814ee1a6bb1f90c" kindref="member">queryCallback_t</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="121" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structcallbackregister__base_1a6c089e0bfb1de755e0a6dcb09938fc38" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void callbackregister_base::unregisterQueryCallback</definition>
        <argsstring>(const std::string &amp;id)=0</argsstring>
        <name>unregisterQueryCallback</name>
        <qualifiedname>callbackregister_base::unregisterQueryCallback</qualifiedname>
        <reimplementedby refid="classrpcserver__thrift_1a051fd62e542584013a6d149b1b315e10">unregisterQueryCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__aggregator_1a8a83f4620684a8f3abd0ab126d37aa8d">unregisterQueryCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__base_1ad393fa1b463721770fcb170d2bb0b2db">unregisterQueryCallback</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="123" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structcallbackregister__base_1a0f6c43c658d74fa922728137370e3f5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void callbackregister_base::registerHandlerCallback</definition>
        <argsstring>(const std::string &amp;id, const handlerCallback_t callback)=0</argsstring>
        <name>registerHandlerCallback</name>
        <qualifiedname>callbackregister_base::registerHandlerCallback</qualifiedname>
        <reimplementedby refid="classrpcserver__thrift_1aee57799a54b121e6b6062257d20af5a3">registerHandlerCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__aggregator_1a1fcb2ae32870806ce5759f20221417ff">registerHandlerCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__base_1a515e34f811de6f6bda2c953928235d72">registerHandlerCallback</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="structcallbackregister__base_1a7fdd2153b194fc4c0d0754613af5fda7" kindref="member">handlerCallback_t</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="124" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structcallbackregister__base_1acb8e57ef770a6901c34ad237c807646b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void callbackregister_base::unregisterHandlerCallback</definition>
        <argsstring>(const std::string &amp;id)=0</argsstring>
        <name>unregisterHandlerCallback</name>
        <qualifiedname>callbackregister_base::unregisterHandlerCallback</qualifiedname>
        <reimplementedby refid="classrpcserver__thrift_1adfcc93ca73bd5b0b06583ac4b816e90e">unregisterHandlerCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__aggregator_1a957b5f18067d2bf27e96755d859655d7">unregisterHandlerCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__base_1a0560b00be225fc74cbce09b4850e2b98">unregisterHandlerCallback</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="126" column="18"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>callbackregister_base</label>
        <link refid="structcallbackregister__base"/>
      </node>
      <node id="3">
        <label>rpcserver_aggregator</label>
        <link refid="classrpcserver__aggregator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rpcserver_base</label>
        <link refid="classrpcserver__base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>rpcserver_thrift</label>
        <link refid="classrpcserver__thrift"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="55" column="1" bodyfile="/home/desktop2/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" bodystart="55" bodyend="127"/>
    <listofallmembers>
      <member refid="structcallbackregister__base_1a4c05d278727594bdf05d222c567b38bf" prot="public" virt="non-virtual"><scope>callbackregister_base</scope><name>callbackregister_base</name></member>
      <member refid="structcallbackregister__base_1aaa5da700159ea9432baf044f1bd3786f" prot="public" virt="non-virtual"><scope>callbackregister_base</scope><name>configureCallback_t</name></member>
      <member refid="structcallbackregister__base_1a7fdd2153b194fc4c0d0754613af5fda7" prot="public" virt="non-virtual"><scope>callbackregister_base</scope><name>handlerCallback_t</name></member>
      <member refid="structcallbackregister__base_1a26829e86a28d11055814ee1a6bb1f90c" prot="public" virt="non-virtual"><scope>callbackregister_base</scope><name>queryCallback_t</name></member>
      <member refid="structcallbackregister__base_1ac6d504cd5a1cb82455757c8711b42017" prot="public" virt="pure-virtual"><scope>callbackregister_base</scope><name>registerConfigureCallback</name></member>
      <member refid="structcallbackregister__base_1a0f6c43c658d74fa922728137370e3f5b" prot="public" virt="pure-virtual"><scope>callbackregister_base</scope><name>registerHandlerCallback</name></member>
      <member refid="structcallbackregister__base_1a969518669759cfbefdc9f29d8c6b2153" prot="public" virt="pure-virtual"><scope>callbackregister_base</scope><name>registerQueryCallback</name></member>
      <member refid="structcallbackregister__base_1a4df3061020ce40966b5cfe84802b4b7b" prot="public" virt="pure-virtual"><scope>callbackregister_base</scope><name>unregisterConfigureCallback</name></member>
      <member refid="structcallbackregister__base_1acb8e57ef770a6901c34ad237c807646b" prot="public" virt="pure-virtual"><scope>callbackregister_base</scope><name>unregisterHandlerCallback</name></member>
      <member refid="structcallbackregister__base_1a6c089e0bfb1de755e0a6dcb09938fc38" prot="public" virt="pure-virtual"><scope>callbackregister_base</scope><name>unregisterQueryCallback</name></member>
      <member refid="structcallbackregister__base_1a574cc1d427024846ee5db738be7a0262" prot="public" virt="virtual"><scope>callbackregister_base</scope><name>~callbackregister_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
