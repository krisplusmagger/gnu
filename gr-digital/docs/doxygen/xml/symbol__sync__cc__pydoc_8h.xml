<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="symbol__sync__cc__pydoc_8h" kind="file" language="C++">
    <compoundname>symbol_sync_cc_pydoc.h</compoundname>
    <includes refid="build_2gr-digital_2python_2digital_2bindings_2pydoc__macros_8h" local="yes">pydoc_macros.h</includes>
    <incdepgraph>
      <node id="2">
        <label>pydoc_macros.h</label>
        <link refid="build_2gr-digital_2python_2digital_2bindings_2pydoc__macros_8h"/>
      </node>
      <node id="1">
        <label>symbol_sync_cc_pydoc.h</label>
        <link refid="symbol__sync__cc__pydoc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="symbol__sync__cc__pydoc_8h_1a74021f021dcdfbb22891787b79c5529d" prot="public" static="no">
        <name>D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="build_2gnuradio-runtime_2python_2gnuradio_2gr_2bindings_2pydoc__macros_8h_1a4e578031ec998eaeb933d5caa6a7d28a" kindref="member">DOC</ref>(gr, digital, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="10" column="10" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="10" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1a5558da91b99edc2278973b2a121ef2c8" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc</name>
        <initializer>= R&quot;doc(Symbol Synchronizer block with complex input, complex output.

This implements a discrete-time error-tracking synchronizer.


For this block to work properly, the input stream must meet the following requirements:

Constructor Specific Documentation:

Make a Symbol Synchronizer block.


This implements a discrete-time error-tracking synchronizer.


For this block to work properly, the input stream must meet the following requirements:

Args:
    detector_type : The enumerated type of timing error detector to use. See enum ted_type for a list of possible types.
    sps : User specified nominal clock period in samples per symbol.
    loop_bw : Approximate normalized loop bandwidth of the symbol clock tracking loop. It should nominally be close to 0, but greater than 0. If unsure, start with a number around 2*pi*0.040, and experiment to find the value that works best for your situation.
    damping_factor : Damping factor of the symbol clock tracking loop. Damping &lt; 1.0f is an under-damped loop. Damping = 1.0f/sqrt(2.0f) is a maximally flat loop response. Damping = 1.0f is a critically-damped loop. Damping &gt; 1.0f is an over-damped loop.
    ted_gain : Expected gain of the timing error detector, given the TED in use and the anticipated input amplitude, pulse shape, and Es/No. This value is the slope of the TED&apos;s <ref refid="rpcserver__thrift_8h_1ac4a3ed3432929804c708f7760fb79e28" kindref="member">S</ref>-curve at timing offset tau = 0. This value is normally computed by the user analytically or by simulation in a tool outside of GNURadio. This value must be correct for the loop filter gains to be computed properly from the desired input loop bandwidth and damping factor.
    max_deviation : Maximum absolute deviation of the average clock period estimate from the user specified nominal clock period in samples per symbol.
    osps : The number of output samples per symbol (default=1).
    slicer : A constellation obj shared pointer that will be used by decision directed timing error detectors to make decisions. I.e. the timing error detector will use this constellation as a slicer, if the particular algorithm needs sliced symbols.
    interp_type : The enumerated type of interpolating resampler to use. See the interpolating resampler type enum for a list of possible types.
    n_filters : The number of arms in the polyphase filterbank of the interpolating resampler, if using an interpolating resampler that uses a PFB.
    <ref refid="interpolator__taps_8h_1a52d84e18f5f0d5d94f4531caf64dde98" kindref="member">taps</ref> : The prototype filter for the polyphase filterbank of the interpolating resampler, if using an interpolating resampler that uses a PFB.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="18" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1a274c2a036a580fdec34d3d409a9b0027" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc_symbol_sync_cc_0</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc_symbol_sync_cc_0</name>
        <initializer>= R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="49" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1a0428fea575e4c00e0bfd2ae12b0e05dc" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc_symbol_sync_cc_1</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc_symbol_sync_cc_1</name>
        <initializer>= R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="52" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1acbb9e10b3f29f7e60bdb00450b989e57" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc_make</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc_make</name>
        <initializer>= R&quot;doc(Symbol Synchronizer block with complex input, complex output.

This implements a discrete-time error-tracking synchronizer.


For this block to work properly, the input stream must meet the following requirements:

Constructor Specific Documentation:

Make a Symbol Synchronizer block.


This implements a discrete-time error-tracking synchronizer.


For this block to work properly, the input stream must meet the following requirements:

Args:
    detector_type : The enumerated type of timing error detector to use. See enum ted_type for a list of possible types.
    sps : User specified nominal clock period in samples per symbol.
    loop_bw : Approximate normalized loop bandwidth of the symbol clock tracking loop. It should nominally be close to 0, but greater than 0. If unsure, start with a number around 2*pi*0.040, and experiment to find the value that works best for your situation.
    damping_factor : Damping factor of the symbol clock tracking loop. Damping &lt; 1.0f is an under-damped loop. Damping = 1.0f/sqrt(2.0f) is a maximally flat loop response. Damping = 1.0f is a critically-damped loop. Damping &gt; 1.0f is an over-damped loop.
    ted_gain : Expected gain of the timing error detector, given the TED in use and the anticipated input amplitude, pulse shape, and Es/No. This value is the slope of the TED&apos;s <ref refid="rpcserver__thrift_8h_1ac4a3ed3432929804c708f7760fb79e28" kindref="member">S</ref>-curve at timing offset tau = 0. This value is normally computed by the user analytically or by simulation in a tool outside of GNURadio. This value must be correct for the loop filter gains to be computed properly from the desired input loop bandwidth and damping factor.
    max_deviation : Maximum absolute deviation of the average clock period estimate from the user specified nominal clock period in samples per symbol.
    osps : The number of output samples per symbol (default=1).
    slicer : A constellation obj shared pointer that will be used by decision directed timing error detectors to make decisions. I.e. the timing error detector will use this constellation as a slicer, if the particular algorithm needs sliced symbols.
    interp_type : The enumerated type of interpolating resampler to use. See the interpolating resampler type enum for a list of possible types.
    n_filters : The number of arms in the polyphase filterbank of the interpolating resampler, if using an interpolating resampler that uses a PFB.
    <ref refid="interpolator__taps_8h_1a52d84e18f5f0d5d94f4531caf64dde98" kindref="member">taps</ref> : The prototype filter for the polyphase filterbank of the interpolating resampler, if using an interpolating resampler that uses a PFB.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="55" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1a484d30b6c3c9967471d5f30a2aaf23dc" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc_loop_bandwidth</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc_loop_bandwidth</name>
        <initializer>= R&quot;doc(Returns the normalized approximate loop bandwidth.

See the documentation for set_loop_bandwidth() for more details.


Note that if set_alpha() or set_beta() were called to directly set gains, the value returned by this method will be inaccurate/stale.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="86" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1a7f49662b1bf200ea6ed7f4d9d6ae8a47" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc_damping_factor</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc_damping_factor</name>
        <initializer>= R&quot;doc(Returns the loop damping factor.

See the documentation for set_damping_factor() for more details.


Note that if set_alpha() or set_beta() were called to directly set gains, the value returned by this method will be inaccurate/stale.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="94" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1a1972fdb6856cde87fcde514326f36e8f" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc_ted_gain</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc_ted_gain</name>
        <initializer>= R&quot;doc(Returns the user provided expected gain of the Timing Error Detector.

See the documentation for set_ted_gain() for more details.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="102" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1abf6ac4d3d63f89e76b6e5b97f796f753" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc_alpha</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc_alpha</name>
        <initializer>= R&quot;doc(Returns the PI filter proportional gain, alpha.

See the documentation for set_alpha() for more details.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="107" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1af7105df9cf28c9d6336c9a0e5ce6c109" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc_beta</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc_beta</name>
        <initializer>= R&quot;doc(Returns the PI filter integral gain, beta.

See the documentation for set_beta() for more details.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="112" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1a04f46e12da99fa5bc1da867c617fa89d" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc_sps</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc_sps</name>
        <initializer>= R&quot;doc(Returns the nominal clock period in samples per symbol.

See the doecumentation for set_sps() for more details.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="117" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1a3426fa05712fc7af1192b5cd92af0f30" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc_set_loop_bandwidth</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc_set_loop_bandwidth</name>
        <initializer>= R&quot;doc(Set the normalized approximate loop bandwidth.

Set the normalized approximate loop bandwidth. Useful values are usually close to 0.0, e.g. 2*pi*0.045.


It should be a small positive number, corresponding to the normalized natural radian frequency of the loop as digital low-pass filter that is filtering the clock phase/timing error.


Technically this parameter corresponds to the natural radian frequency of the 2nd order loop transfer function (scaled by Fs), which is the radius of the pole locations in the s-plane of an underdamped analog 2nd order system.


The input parameter corresponds to omega_n_norm in the following relation:  where T is the period of the clock being estimated by this clock tracking loop, and omega_n is the natural radian frequency of the 2nd order loop transfer function.


When a new loop bandwidth is set, the gains, alpha and beta, of the loop are automatically recalculated.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="122" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1aa668e1f3c9a6e9b08b058f81dd7f9d61" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc_set_damping_factor</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc_set_damping_factor</name>
        <initializer>= R&quot;doc(Set the loop damping factor.

Set the damping factor of the loop. Damping in the range (0.0, 1.0) yields an under-damped loop. Damping in the range (1.0, Inf) yields an over-damped loop. Damping equal to 1.0 yields a crtically-damped loop. Damping equal to 1.0/sqrt(2.0) yields a maximally flat loop filter response.


Damping factor of the 2nd order loop transfer function. When a new damping factor is set, the gains, alpha and beta, of the loop are automatically recalculated.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="139" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1ab5bd8cc0a46ab86728677bf656c21598" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc_set_ted_gain</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc_set_ted_gain</name>
        <initializer>= R&quot;doc(Set the expected gain of the Timing Error Detector.

Sets the expected gain of the timing error detector, given the TED in use and the anticipated input amplitude, pulse shape, and Es/No. This value is the slope of the TED&apos;s <ref refid="rpcserver__thrift_8h_1ac4a3ed3432929804c708f7760fb79e28" kindref="member">S</ref>-curve at timing offset tau = 0. This value is normally computed by the user analytically or by simulation in a tool outside of GNURadio. This value must be correct for the loop filter gains to be computed properly from the desired input loop bandwidth and damping factor.


When a new ted_gain is set, the gains, alpha and beta, of the loop are automatically recalculated.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="147" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1acc3c691598f163820a1adb6c117ac60f" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc_set_alpha</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc_set_alpha</name>
        <initializer>= R&quot;doc(Set the PI filter proportional gain, alpha.

Sets the PI filter proportional gain, alpha. This gain directly multiplies the clock phase/timing error term in the PI filter when advancing the loop. It most directly affects the instantaneous clock period estimate, T_inst, and instantaneous clock phase estimate, tau.


This value would normally be adjusted by setting the loop bandwidth and damping factor. However, it can be set here directly if desired.


Setting this parameter directly is probably only feasible if the user is directly observing the estimates of average clock period and instantaneous clock period over time in response to an impulsive change in the input stream (i.e. watching the loop transient behavior at the start of a data burst).)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="155" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1a5dcc1b3fd5342639926c1565e07ffd4e" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc_set_beta</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc_set_beta</name>
        <initializer>= R&quot;doc(Set the PI filter integral gain, beta.

Sets the PI filter integral gain, beta. This gain is used when integrating the clock phase/timing error term in the PI filter when advancing the loop. It most directly affects the average clock period estimate, T_avg.


This value would normally be adjusted by setting the loop bandwidth and damping factor. However, it can be set here directly if desired.


Setting this parameter directly is probably only feasible if the user is directly observing the estimates of average clock period and instantaneous clock period over time in response to an impulsive change in the input stream (i.e. watching the loop transient behavior at the start of a data burst).)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="166" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="symbol__sync__cc__pydoc_8h_1a77eb171313dc85cc39946e5f27483afc" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_symbol_sync_cc_set_sps</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_symbol_sync_cc_set_sps</name>
        <initializer>= R&quot;doc(Set the nominal clock period in samples per symbol.

Sets the nominal clock period, resetting some of the tracking loop variables to adjust to the new clock period.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" line="177" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h" bodystart="177" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/symbol_sync_cc_pydoc.h"/>
  </compounddef>
</doxygen>
