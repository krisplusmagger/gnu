<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="tagged__decoder__pydoc_8h" kind="file" language="C++">
    <compoundname>tagged_decoder_pydoc.h</compoundname>
    <includes refid="build_2gr-fec_2python_2fec_2bindings_2pydoc__macros_8h" local="yes">pydoc_macros.h</includes>
    <incdepgraph>
      <node id="2">
        <label>pydoc_macros.h</label>
        <link refid="build_2gr-fec_2python_2fec_2bindings_2pydoc__macros_8h"/>
      </node>
      <node id="1">
        <label>tagged_decoder_pydoc.h</label>
        <link refid="tagged__decoder__pydoc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="tagged__decoder__pydoc_8h_1a74021f021dcdfbb22891787b79c5529d" prot="public" static="no">
        <name>D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="build_2gnuradio-runtime_2python_2gnuradio_2gr_2bindings_2pydoc__macros_8h_1a4e578031ec998eaeb933d5caa6a7d28a" kindref="member">DOC</ref>(gr, fec, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/tagged_decoder_pydoc.h" line="10" column="10" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/tagged_decoder_pydoc.h" bodystart="10" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="tagged__decoder__pydoc_8h_1aa60033f83c1523e04276f9b4e3c17b32" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_fec_tagged_decoder</definition>
        <argsstring></argsstring>
        <name>__doc_gr_fec_tagged_decoder</name>
        <initializer>= R&quot;doc(General FEC decoding block that takes in a decoder variable object (derived from gr::fec::general_decoder) for use in a flowgraph.

This block uses a decoder variable object (derived from <ref refid="classgr_1_1fec_1_1generic__decoder" kindref="compound">gr::fec::generic_decoder</ref>) to decode data within a flowgraph. This block interacts with the general FECAPI architecture to handle all passing all input and output data in a flowgraph. The decoder variable takes care of understanding the requirements, data types and sizes, and boundary conditions of the specific FEC decoding algorithm.


Generally, this block is used within the fec.extended_decoder Python block to handle some input/output formatting issues. In the FECAPI, the decoder variable sets properties like the input and output types and sizes and whether the output is packed or unpacked bytes. The fec.extended_decoder uses this information to set up an <ref refid="classgr_1_1hier__block2" kindref="compound">gr::hier_block2</ref> structure to make sure the I/O to the variable is handled consistently, such as to make sure all inputs are floats with one soft symbol per item and the outputs are unpacked bytes with the bit in the LSB.


See <ref refid="classgr_1_1fec_1_1generic__decoder" kindref="compound">gr::fec::generic_decoder</ref> for detail on what information an FECAPI variable object can set if using this block directly and not as part of the fec.extended_decoder.

Constructor Specific Documentation:

Create the FEC decoder block by taking in the FECAPI decoder object as well as input and output sizes.

Args:
    my_decoder : An FECAPI decoder object (See <ref refid="classgr_1_1fec_1_1generic__decoder" kindref="compound">gr::fec::generic_decoder</ref>).
    input_item_size : The size of the input items (often the my_decoder object can tell us this).
    output_item_size : The size of the output items (often the my_decoder object can tell us this).
    lengthtagname : Key name of the tagged stream frame size.
    mtu : The Maximum Transmission Unit (MTU) of the output frame that the block will be able to process. Specified in bytes and defaults to 1500.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/tagged_decoder_pydoc.h" line="18" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/tagged_decoder_pydoc.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tagged__decoder__pydoc_8h_1a25d8d0534db007410d5fca2f59f6c96b" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_fec_tagged_decoder_tagged_decoder_0</definition>
        <argsstring></argsstring>
        <name>__doc_gr_fec_tagged_decoder_tagged_decoder_0</name>
        <initializer>= R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/tagged_decoder_pydoc.h" line="40" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/tagged_decoder_pydoc.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tagged__decoder__pydoc_8h_1a5bcd4ef69951687f9484187f49de5edf" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_fec_tagged_decoder_tagged_decoder_1</definition>
        <argsstring></argsstring>
        <name>__doc_gr_fec_tagged_decoder_tagged_decoder_1</name>
        <initializer>= R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/tagged_decoder_pydoc.h" line="43" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/tagged_decoder_pydoc.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tagged__decoder__pydoc_8h_1ab391653231b776320d1ab7c2760b55ba" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_fec_tagged_decoder_make</definition>
        <argsstring></argsstring>
        <name>__doc_gr_fec_tagged_decoder_make</name>
        <initializer>= R&quot;doc(General FEC decoding block that takes in a decoder variable object (derived from gr::fec::general_decoder) for use in a flowgraph.

This block uses a decoder variable object (derived from <ref refid="classgr_1_1fec_1_1generic__decoder" kindref="compound">gr::fec::generic_decoder</ref>) to decode data within a flowgraph. This block interacts with the general FECAPI architecture to handle all passing all input and output data in a flowgraph. The decoder variable takes care of understanding the requirements, data types and sizes, and boundary conditions of the specific FEC decoding algorithm.


Generally, this block is used within the fec.extended_decoder Python block to handle some input/output formatting issues. In the FECAPI, the decoder variable sets properties like the input and output types and sizes and whether the output is packed or unpacked bytes. The fec.extended_decoder uses this information to set up an <ref refid="classgr_1_1hier__block2" kindref="compound">gr::hier_block2</ref> structure to make sure the I/O to the variable is handled consistently, such as to make sure all inputs are floats with one soft symbol per item and the outputs are unpacked bytes with the bit in the LSB.


See <ref refid="classgr_1_1fec_1_1generic__decoder" kindref="compound">gr::fec::generic_decoder</ref> for detail on what information an FECAPI variable object can set if using this block directly and not as part of the fec.extended_decoder.

Constructor Specific Documentation:

Create the FEC decoder block by taking in the FECAPI decoder object as well as input and output sizes.

Args:
    my_decoder : An FECAPI decoder object (See <ref refid="classgr_1_1fec_1_1generic__decoder" kindref="compound">gr::fec::generic_decoder</ref>).
    input_item_size : The size of the input items (often the my_decoder object can tell us this).
    output_item_size : The size of the output items (often the my_decoder object can tell us this).
    lengthtagname : Key name of the tagged stream frame size.
    mtu : The Maximum Transmission Unit (MTU) of the output frame that the block will be able to process. Specified in bytes and defaults to 1500.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/tagged_decoder_pydoc.h" line="46" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/tagged_decoder_pydoc.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tagged__decoder__pydoc_8h_1a1e3d2cd3c339bb391f933b79ae227feb" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_fec_tagged_decoder_work</definition>
        <argsstring></argsstring>
        <name>__doc_gr_fec_tagged_decoder_work</name>
        <initializer>= R&quot;doc(Just like <ref refid="classgr_1_1block_1a0a482fb96a3d7343ffdd86a21538c2e5" kindref="member">gr::block::general_work</ref>, but makes sure the input is valid.

The user must override work to define the signal processing code. Check the documentation for general_work() to see what happens here.


Like <ref refid="classgr_1_1sync__block" kindref="compound">gr::sync_block</ref>, this calls consume() for you (it consumes ninput_items[i] items from the i-th port).


A note on tag propagation: The PDU length tags are handled by other functions, but all other tags are handled just as in any other . So, most likely, you either set the tag propagation policy to TPP_DONT and handle the tag propagation manually, or you propagate tags through the scheduler and don&apos;t do anything here.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/tagged_decoder_pydoc.h" line="68" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/tagged_decoder_pydoc.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tagged__decoder__pydoc_8h_1a526efd693c32a0bf3f7ec04a5a68141a" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_fec_tagged_decoder_calculate_output_stream_length</definition>
        <argsstring></argsstring>
        <name>__doc_gr_fec_tagged_decoder_calculate_output_stream_length</name>
        <initializer>=
    R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/tagged_decoder_pydoc.h" line="79" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/tagged_decoder_pydoc.h" bodystart="79" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/tagged_decoder_pydoc.h"/>
  </compounddef>
</doxygen>
