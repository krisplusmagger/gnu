<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="req__source__pydoc_8h" kind="file" language="C++">
    <compoundname>req_source_pydoc.h</compoundname>
    <includes refid="build_2gr-zeromq_2python_2zeromq_2bindings_2pydoc__macros_8h" local="yes">pydoc_macros.h</includes>
    <incdepgraph>
      <node id="2">
        <label>pydoc_macros.h</label>
        <link refid="build_2gr-zeromq_2python_2zeromq_2bindings_2pydoc__macros_8h"/>
      </node>
      <node id="1">
        <label>req_source_pydoc.h</label>
        <link refid="req__source__pydoc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="req__source__pydoc_8h_1a74021f021dcdfbb22891787b79c5529d" prot="public" static="no">
        <name>D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="build_2gnuradio-runtime_2python_2gnuradio_2gr_2bindings_2pydoc__macros_8h_1a4e578031ec998eaeb933d5caa6a7d28a" kindref="member">DOC</ref>(gr, zeromq, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-zeromq/python/zeromq/bindings/req_source_pydoc.h" line="10" column="10" bodyfile="/home/desktop2/gnuradio/build/gr-zeromq/python/zeromq/bindings/req_source_pydoc.h" bodystart="10" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="req__source__pydoc_8h_1aa3c64cfe54e993cc5f14277a67ce84ac" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_zeromq_req_source</definition>
        <argsstring></argsstring>
        <name>__doc_gr_zeromq_req_source</name>
        <initializer>= R&quot;doc(Receive messages on ZMQ REQ socket and source stream.

This block will connect to a ZMQ REP socket, then produce all incoming messages as streaming output.

Constructor Specific Documentation:

Return a shared_ptr to a new instance of zeromq::req_source.

Args:
    itemsize : Size of a stream item in bytes.
    vlen : Vector length of the input items. Note that one vector is one item.
    address : ZMQ socket address specifier.
    timeout : Receive timeout in milliseconds, default is 100ms, 1us increments.
    pass_tags : Whether source will look for and deserialize tags.
    hwm : High Watermark to configure the socket to (-1 =&gt; zmq&apos;s default)
    bind : If true this block will bind to the address, otherwise it will connect; the default is to connect)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-zeromq/python/zeromq/bindings/req_source_pydoc.h" line="18" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-zeromq/python/zeromq/bindings/req_source_pydoc.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="req__source__pydoc_8h_1ada59a46563497067cd91ffbe492b03fd" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_zeromq_req_source_req_source_0</definition>
        <argsstring></argsstring>
        <name>__doc_gr_zeromq_req_source_req_source_0</name>
        <initializer>= R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-zeromq/python/zeromq/bindings/req_source_pydoc.h" line="36" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-zeromq/python/zeromq/bindings/req_source_pydoc.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="req__source__pydoc_8h_1a7e40299eac1fff2fd71be049326396af" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_zeromq_req_source_req_source_1</definition>
        <argsstring></argsstring>
        <name>__doc_gr_zeromq_req_source_req_source_1</name>
        <initializer>= R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-zeromq/python/zeromq/bindings/req_source_pydoc.h" line="39" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-zeromq/python/zeromq/bindings/req_source_pydoc.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="req__source__pydoc_8h_1a65beba477a3590c5555e6c3b319c95bf" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_zeromq_req_source_make</definition>
        <argsstring></argsstring>
        <name>__doc_gr_zeromq_req_source_make</name>
        <initializer>= R&quot;doc(Receive messages on ZMQ REQ socket and source stream.

This block will connect to a ZMQ REP socket, then produce all incoming messages as streaming output.

Constructor Specific Documentation:

Return a shared_ptr to a new instance of zeromq::req_source.

Args:
    itemsize : Size of a stream item in bytes.
    vlen : Vector length of the input items. Note that one vector is one item.
    address : ZMQ socket address specifier.
    timeout : Receive timeout in milliseconds, default is 100ms, 1us increments.
    pass_tags : Whether source will look for and deserialize tags.
    hwm : High Watermark to configure the socket to (-1 =&gt; zmq&apos;s default)
    bind : If true this block will bind to the address, otherwise it will connect; the default is to connect)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-zeromq/python/zeromq/bindings/req_source_pydoc.h" line="42" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-zeromq/python/zeromq/bindings/req_source_pydoc.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="req__source__pydoc_8h_1ad14fe03cbeab2f0382abd39ee368ce93" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_zeromq_req_source_last_endpoint</definition>
        <argsstring></argsstring>
        <name>__doc_gr_zeromq_req_source_last_endpoint</name>
        <initializer>= R&quot;doc(Return a std::string of ZMQ_LAST_ENDPOINT from the underlying ZMQ socket.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-zeromq/python/zeromq/bindings/req_source_pydoc.h" line="60" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-zeromq/python/zeromq/bindings/req_source_pydoc.h" bodystart="60" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/desktop2/gnuradio/build/gr-zeromq/python/zeromq/bindings/req_source_pydoc.h"/>
  </compounddef>
</doxygen>
