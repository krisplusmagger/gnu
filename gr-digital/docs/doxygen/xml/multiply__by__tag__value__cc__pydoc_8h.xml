<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="multiply__by__tag__value__cc__pydoc_8h" kind="file" language="C++">
    <compoundname>multiply_by_tag_value_cc_pydoc.h</compoundname>
    <includes refid="build_2gr-blocks_2python_2blocks_2bindings_2pydoc__macros_8h" local="yes">pydoc_macros.h</includes>
    <incdepgraph>
      <node id="1">
        <label>multiply_by_tag_value_cc_pydoc.h</label>
        <link refid="multiply__by__tag__value__cc__pydoc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pydoc_macros.h</label>
        <link refid="build_2gr-blocks_2python_2blocks_2bindings_2pydoc__macros_8h"/>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="multiply__by__tag__value__cc__pydoc_8h_1a74021f021dcdfbb22891787b79c5529d" prot="public" static="no">
        <name>D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="build_2gnuradio-runtime_2python_2gnuradio_2gr_2bindings_2pydoc__macros_8h_1a4e578031ec998eaeb933d5caa6a7d28a" kindref="member">DOC</ref>(gr, blocks, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-blocks/python/blocks/bindings/multiply_by_tag_value_cc_pydoc.h" line="10" column="10" bodyfile="/home/desktop2/gnuradio/build/gr-blocks/python/blocks/bindings/multiply_by_tag_value_cc_pydoc.h" bodystart="10" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="multiply__by__tag__value__cc__pydoc_8h_1ab584bb95a5a25b456870f3427abd1d3c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_blocks_multiply_by_tag_value_cc</definition>
        <argsstring></argsstring>
        <name>__doc_gr_blocks_multiply_by_tag_value_cc</name>
        <initializer>= R&quot;doc(output = input * complex constant

The complex constant used by this block is found from a tag with the name specified by . The tag must contain a float/double or complex PMT value that will be converted into a <ref refid="gr__complex_8h_1aec4bfe41433369afae9327f1b0bc9109" kindref="member">gr_complex</ref> value. All input data is multiplied by this value until a new tag with an update value is found. The block starts with a value of &apos;1.0&apos; for the multiplier constant.

Constructor Specific Documentation:

Create an instance of multiply_by_tag_value_cc.

Args:
    tag_name : Tag&apos;s key that it will use to get the multiplicative constant.
    vlen : Vector length of incoming stream)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-blocks/python/blocks/bindings/multiply_by_tag_value_cc_pydoc.h" line="18" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-blocks/python/blocks/bindings/multiply_by_tag_value_cc_pydoc.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="multiply__by__tag__value__cc__pydoc_8h_1aec4e99f2e3c60c1e67b14679a24a9e13" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_blocks_multiply_by_tag_value_cc_multiply_by_tag_value_cc_0</definition>
        <argsstring></argsstring>
        <name>__doc_gr_blocks_multiply_by_tag_value_cc_multiply_by_tag_value_cc_0</name>
        <initializer>=
    R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-blocks/python/blocks/bindings/multiply_by_tag_value_cc_pydoc.h" line="31" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-blocks/python/blocks/bindings/multiply_by_tag_value_cc_pydoc.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="multiply__by__tag__value__cc__pydoc_8h_1a44012e2d2ec45875f50119ece31d31dd" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_blocks_multiply_by_tag_value_cc_multiply_by_tag_value_cc_1</definition>
        <argsstring></argsstring>
        <name>__doc_gr_blocks_multiply_by_tag_value_cc_multiply_by_tag_value_cc_1</name>
        <initializer>=
    R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-blocks/python/blocks/bindings/multiply_by_tag_value_cc_pydoc.h" line="35" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-blocks/python/blocks/bindings/multiply_by_tag_value_cc_pydoc.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="multiply__by__tag__value__cc__pydoc_8h_1a905103b31c093b0e5792adfe8f363d85" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_blocks_multiply_by_tag_value_cc_make</definition>
        <argsstring></argsstring>
        <name>__doc_gr_blocks_multiply_by_tag_value_cc_make</name>
        <initializer>= R&quot;doc(output = input * complex constant

The complex constant used by this block is found from a tag with the name specified by . The tag must contain a float/double or complex PMT value that will be converted into a <ref refid="gr__complex_8h_1aec4bfe41433369afae9327f1b0bc9109" kindref="member">gr_complex</ref> value. All input data is multiplied by this value until a new tag with an update value is found. The block starts with a value of &apos;1.0&apos; for the multiplier constant.

Constructor Specific Documentation:

Create an instance of multiply_by_tag_value_cc.

Args:
    tag_name : Tag&apos;s key that it will use to get the multiplicative constant.
    vlen : Vector length of incoming stream)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-blocks/python/blocks/bindings/multiply_by_tag_value_cc_pydoc.h" line="39" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-blocks/python/blocks/bindings/multiply_by_tag_value_cc_pydoc.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="multiply__by__tag__value__cc__pydoc_8h_1a1a6a86b617468336fa0e075b59ebd0c9" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_blocks_multiply_by_tag_value_cc_k</definition>
        <argsstring></argsstring>
        <name>__doc_gr_blocks_multiply_by_tag_value_cc_k</name>
        <initializer>= R&quot;doc(Get the current multiplicative constant. This block does not allow external setters.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-blocks/python/blocks/bindings/multiply_by_tag_value_cc_pydoc.h" line="52" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-blocks/python/blocks/bindings/multiply_by_tag_value_cc_pydoc.h" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/desktop2/gnuradio/build/gr-blocks/python/blocks/bindings/multiply_by_tag_value_cc_pydoc.h"/>
  </compounddef>
</doxygen>
