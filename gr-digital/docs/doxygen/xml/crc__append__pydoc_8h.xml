<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="crc__append__pydoc_8h" kind="file" language="C++">
    <compoundname>crc_append_pydoc.h</compoundname>
    <includes refid="build_2gr-digital_2python_2digital_2bindings_2pydoc__macros_8h" local="yes">pydoc_macros.h</includes>
    <incdepgraph>
      <node id="1">
        <label>crc_append_pydoc.h</label>
        <link refid="crc__append__pydoc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pydoc_macros.h</label>
        <link refid="build_2gr-digital_2python_2digital_2bindings_2pydoc__macros_8h"/>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="crc__append__pydoc_8h_1a74021f021dcdfbb22891787b79c5529d" prot="public" static="no">
        <name>D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="build_2gnuradio-runtime_2python_2gnuradio_2gr_2bindings_2pydoc__macros_8h_1a4e578031ec998eaeb933d5caa6a7d28a" kindref="member">DOC</ref>(gr, digital, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/crc_append_pydoc.h" line="10" column="10" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/crc_append_pydoc.h" bodystart="10" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="crc__append__pydoc_8h_1a798bbd62ef767e55bae31ed5829843c1" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_crc_append</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_crc_append</name>
        <initializer>= R&quot;doc(Calculates and appends a CRC to a PDU.

The CRC append block receives a PDU, calculates the CRC of the PDU data, appends it to the PDU, and sends that as its output. It can support any CRC whose size is a multiple of 8 bits between 8 and 64 bits.

Constructor Specific Documentation:

Build the CRC append block.

Args:
    num_bits : CRC size in bits (must be a multiple of 8)
    poly : CRC polynomial, in MSB-first notation
    initial_value : Initial register value
    final_xor : Final XOR value
    input_reflected : true if the input is LSB-first, false if not
    result_reflected : true if the output is LSB-first, false if not
    swap_endianness : true if the CRC is stored as little-endian in the PDU, false if not
    skip_header_bytes : gives the number of header byte to skip in the CRC calculation)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/crc_append_pydoc.h" line="18" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/crc_append_pydoc.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="crc__append__pydoc_8h_1ac5fccc2fc9126d5bcf163dc8923cbbf7" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_crc_append_crc_append</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_crc_append_crc_append</name>
        <initializer>= R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/crc_append_pydoc.h" line="37" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/crc_append_pydoc.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="crc__append__pydoc_8h_1a4996fcaf7b3b4804fc640bb85c54ac16" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_crc_append_make</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_crc_append_make</name>
        <initializer>= R&quot;doc(Calculates and appends a CRC to a PDU.

The CRC append block receives a PDU, calculates the CRC of the PDU data, appends it to the PDU, and sends that as its output. It can support any CRC whose size is a multiple of 8 bits between 8 and 64 bits.

Constructor Specific Documentation:

Build the CRC append block.

Args:
    num_bits : CRC size in bits (must be a multiple of 8)
    poly : CRC polynomial, in MSB-first notation
    initial_value : Initial register value
    final_xor : Final XOR value
    input_reflected : true if the input is LSB-first, false if not
    result_reflected : true if the output is LSB-first, false if not
    swap_endianness : true if the CRC is stored as little-endian in the PDU, false if not
    skip_header_bytes : gives the number of header byte to skip in the CRC calculation)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/crc_append_pydoc.h" line="40" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/crc_append_pydoc.h" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/crc_append_pydoc.h"/>
  </compounddef>
</doxygen>
