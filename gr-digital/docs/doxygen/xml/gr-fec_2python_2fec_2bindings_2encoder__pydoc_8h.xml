<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="gr-fec_2python_2fec_2bindings_2encoder__pydoc_8h" kind="file" language="C++">
    <compoundname>gr-fec/python/fec/bindings/encoder_pydoc.h</compoundname>
    <includes refid="build_2gr-fec_2python_2fec_2bindings_2pydoc__macros_8h" local="yes">pydoc_macros.h</includes>
    <incdepgraph>
      <node id="1">
        <label>encoder_pydoc.h</label>
        <link refid="gr-fec_2python_2fec_2bindings_2encoder__pydoc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pydoc_macros.h</label>
        <link refid="build_2gr-fec_2python_2fec_2bindings_2pydoc__macros_8h"/>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="gr-fec_2python_2fec_2bindings_2encoder__pydoc_8h_1a74021f021dcdfbb22891787b79c5529d" prot="public" static="no">
        <name>D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="build_2gnuradio-runtime_2python_2gnuradio_2gr_2bindings_2pydoc__macros_8h_1a4e578031ec998eaeb933d5caa6a7d28a" kindref="member">DOC</ref>(gr, fec, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" line="10" column="10" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" bodystart="10" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="gr-fec_2python_2fec_2bindings_2encoder__pydoc_8h_1a15639e89892721ee385ea6c070be029d" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_fec_encoder</definition>
        <argsstring></argsstring>
        <name>__doc_gr_fec_encoder</name>
        <initializer>= R&quot;doc(Creates the encoder block for use in GNU Radio flowgraphs from a given FECAPI object derived from the generic_encoder class.

Generally, we would use the fec.extended_encoder Python implementation to instantiate this. The extended_encoder wraps up a few more details, like taking care of puncturing as well as the encoder itself.

Constructor Specific Documentation:

Build the FEC encoder block from an FECAPI encoder object.

Args:
    my_encoder : An FECAPI encoder object child of the generic_encoder class.
    input_item_size : size of a block of data for the encoder.
    output_item_size : size of a block of data the encoder will produce.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" line="18" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gr-fec_2python_2fec_2bindings_2encoder__pydoc_8h_1aa70ecef4701252686cdd9afff6778f44" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_fec_encoder_encoder_0</definition>
        <argsstring></argsstring>
        <name>__doc_gr_fec_encoder_encoder_0</name>
        <initializer>= R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" line="32" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gr-fec_2python_2fec_2bindings_2encoder__pydoc_8h_1a3971ccc94c42d38a5fb7c4ffc3eb27a4" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_fec_encoder_encoder_1</definition>
        <argsstring></argsstring>
        <name>__doc_gr_fec_encoder_encoder_1</name>
        <initializer>= R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" line="35" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gr-fec_2python_2fec_2bindings_2encoder__pydoc_8h_1a0d4a61c5b8753e300308995d01783eb7" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_fec_encoder_make</definition>
        <argsstring></argsstring>
        <name>__doc_gr_fec_encoder_make</name>
        <initializer>= R&quot;doc(Creates the encoder block for use in GNU Radio flowgraphs from a given FECAPI object derived from the generic_encoder class.

Generally, we would use the fec.extended_encoder Python implementation to instantiate this. The extended_encoder wraps up a few more details, like taking care of puncturing as well as the encoder itself.

Constructor Specific Documentation:

Build the FEC encoder block from an FECAPI encoder object.

Args:
    my_encoder : An FECAPI encoder object child of the generic_encoder class.
    input_item_size : size of a block of data for the encoder.
    output_item_size : size of a block of data the encoder will produce.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" line="38" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gr-fec_2python_2fec_2bindings_2encoder__pydoc_8h_1ac5cf588fcd94eaa3a9d8fb9b8e5606ff" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_fec_encoder_general_work</definition>
        <argsstring></argsstring>
        <name>__doc_gr_fec_encoder_general_work</name>
        <initializer>= R&quot;doc(compute output items from input items

WORK_CALLED_PRODUCE is used where not all outputs produce the same number of items. general_work must call produce() for each output to indicate the number of items actually produced.


WORK_DONE indicates that no more data will be produced by this block.


general_work must call consume or consume_each to indicate how many items were consumed on each input stream.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" line="52" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gr-fec_2python_2fec_2bindings_2encoder__pydoc_8h_1aca1ad02357109c902089d79054be8179" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_fec_encoder_fixed_rate_ninput_to_noutput</definition>
        <argsstring></argsstring>
        <name>__doc_gr_fec_encoder_fixed_rate_ninput_to_noutput</name>
        <initializer>= R&quot;doc(Given ninput samples, return number of output samples that will be produced. N.B. this is only defined if fixed_rate returns true. Generally speaking, you don&apos;t need to override this.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" line="63" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gr-fec_2python_2fec_2bindings_2encoder__pydoc_8h_1a2ea7bd614484889df15845e77c260903" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_fec_encoder_fixed_rate_noutput_to_ninput</definition>
        <argsstring></argsstring>
        <name>__doc_gr_fec_encoder_fixed_rate_noutput_to_ninput</name>
        <initializer>= R&quot;doc(Given noutput samples, return number of input samples required to produce noutput. N.B. this is only defined if fixed_rate returns true. Generally speaking, you don&apos;t need to override this.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" line="66" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gr-fec_2python_2fec_2bindings_2encoder__pydoc_8h_1a46e31479c722fcd9c59b2e10263abf0e" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_fec_encoder_forecast</definition>
        <argsstring></argsstring>
        <name>__doc_gr_fec_encoder_forecast</name>
        <initializer>= R&quot;doc(Estimate input requirements given output request.

Given a request to product , estimate the number of data items required on each input stream. The estimate doesn&apos;t have to be exact, but should be close.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" line="69" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h" bodystart="69" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/desktop2/gnuradio/build/gr-fec/python/fec/bindings/encoder_pydoc.h"/>
  </compounddef>
</doxygen>
