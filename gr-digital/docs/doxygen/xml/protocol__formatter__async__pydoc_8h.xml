<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="protocol__formatter__async__pydoc_8h" kind="file" language="C++">
    <compoundname>protocol_formatter_async_pydoc.h</compoundname>
    <includes refid="build_2gr-digital_2python_2digital_2bindings_2pydoc__macros_8h" local="yes">pydoc_macros.h</includes>
    <incdepgraph>
      <node id="1">
        <label>protocol_formatter_async_pydoc.h</label>
        <link refid="protocol__formatter__async__pydoc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pydoc_macros.h</label>
        <link refid="build_2gr-digital_2python_2digital_2bindings_2pydoc__macros_8h"/>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="protocol__formatter__async__pydoc_8h_1a74021f021dcdfbb22891787b79c5529d" prot="public" static="no">
        <name>D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="build_2gnuradio-runtime_2python_2gnuradio_2gr_2bindings_2pydoc__macros_8h_1a4e578031ec998eaeb933d5caa6a7d28a" kindref="member">DOC</ref>(gr, digital, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/protocol_formatter_async_pydoc.h" line="10" column="10" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/protocol_formatter_async_pydoc.h" bodystart="10" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="protocol__formatter__async__pydoc_8h_1a49a81414de4acce33786c2a83a9dfddd" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_protocol_formatter_async</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_protocol_formatter_async</name>
        <initializer>= R&quot;doc(Uses a header format object to append a header onto a PDU.

This block takes in PDUs and creates a header, generally for MAC-level processing. Each received PDU is assumed to be its own frame, so any fragmentation would be done upstream in or before the flowgraph.


The header that is created and transmitted out of the &apos;header&apos; message port as a PDU. The header is based entirely on the  object, which is an object derived from the header_format_base class. All of these packet header format objects operate the same: they take in the payload data as well as possible extra metadata info about the PDU; the format object then returns the output PDU as a PMT argument along with any changes to the metadata info PMT.


For different packet header formatting needs, we can define new classes that inherit from the header_format_base block and which overload the header_format_base::format function.





This block only uses asynchronous message passing interfaces to receiver and emit PDUs. The message ports are:

Constructor Specific Documentation:

Make a packet header block using a given .

Args:
    format : The format object to use when creating the header for the packet.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/protocol_formatter_async_pydoc.h" line="18" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/protocol_formatter_async_pydoc.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol__formatter__async__pydoc_8h_1ac8b46cf39f73651058a52813a18bd26d" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_protocol_formatter_async_protocol_formatter_async</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_protocol_formatter_async_protocol_formatter_async</name>
        <initializer>=
    R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/protocol_formatter_async_pydoc.h" line="42" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/protocol_formatter_async_pydoc.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol__formatter__async__pydoc_8h_1a7f060b7cd3e3d9f6266b88cbec4bf02f" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_digital_protocol_formatter_async_make</definition>
        <argsstring></argsstring>
        <name>__doc_gr_digital_protocol_formatter_async_make</name>
        <initializer>= R&quot;doc(Uses a header format object to append a header onto a PDU.

This block takes in PDUs and creates a header, generally for MAC-level processing. Each received PDU is assumed to be its own frame, so any fragmentation would be done upstream in or before the flowgraph.


The header that is created and transmitted out of the &apos;header&apos; message port as a PDU. The header is based entirely on the  object, which is an object derived from the header_format_base class. All of these packet header format objects operate the same: they take in the payload data as well as possible extra metadata info about the PDU; the format object then returns the output PDU as a PMT argument along with any changes to the metadata info PMT.


For different packet header formatting needs, we can define new classes that inherit from the header_format_base block and which overload the header_format_base::format function.





This block only uses asynchronous message passing interfaces to receiver and emit PDUs. The message ports are:

Constructor Specific Documentation:

Make a packet header block using a given .

Args:
    format : The format object to use when creating the header for the packet.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/protocol_formatter_async_pydoc.h" line="46" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/protocol_formatter_async_pydoc.h" bodystart="46" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/desktop2/gnuradio/build/gr-digital/python/digital/bindings/protocol_formatter_async_pydoc.h"/>
  </compounddef>
</doxygen>
