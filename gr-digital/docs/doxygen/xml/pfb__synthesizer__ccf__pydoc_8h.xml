<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="pfb__synthesizer__ccf__pydoc_8h" kind="file" language="C++">
    <compoundname>pfb_synthesizer_ccf_pydoc.h</compoundname>
    <includes refid="build_2gr-filter_2python_2filter_2bindings_2pydoc__macros_8h" local="yes">pydoc_macros.h</includes>
    <incdepgraph>
      <node id="1">
        <label>pfb_synthesizer_ccf_pydoc.h</label>
        <link refid="pfb__synthesizer__ccf__pydoc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pydoc_macros.h</label>
        <link refid="build_2gr-filter_2python_2filter_2bindings_2pydoc__macros_8h"/>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="pfb__synthesizer__ccf__pydoc_8h_1a74021f021dcdfbb22891787b79c5529d" prot="public" static="no">
        <name>D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="build_2gnuradio-runtime_2python_2gnuradio_2gr_2bindings_2pydoc__macros_8h_1a4e578031ec998eaeb933d5caa6a7d28a" kindref="member">DOC</ref>(gr, filter, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" line="10" column="10" bodyfile="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" bodystart="10" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="pfb__synthesizer__ccf__pydoc_8h_1a32be2dd0880a5b81ebf2f316de600ad6" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_filter_pfb_synthesizer_ccf</definition>
        <argsstring></argsstring>
        <name>__doc_gr_filter_pfb_synthesizer_ccf</name>
        <initializer>= R&quot;doc(Polyphase synthesis filterbank with <ref refid="gr__complex_8h_1aec4bfe41433369afae9327f1b0bc9109" kindref="member">gr_complex</ref> input, <ref refid="gr__complex_8h_1aec4bfe41433369afae9327f1b0bc9109" kindref="member">gr_complex</ref> output and float taps.

The PFB synthesis filterbank combines multiple baseband signals into a single channelized signal. Each input stream is, essentially, modulated onto an output channel according the the channel mapping (see set_channel_map for details).


Setting this filterbank up means selecting the number of output channels, the prototype filter, and whether to handle channels at 2x the sample rate (this is generally used only for reconstruction filtering).


The number of channels sets the maximum number of channels to use, but not all input streams must be connected. For M total channels, we can connect inputs 0 to N where N &lt; M-1. Because of the way GNU Radio handles stream connections, we must connect the channels consecutively, and so we must use the set_channel_map if the desired output channels are not the same as the the default mapping. This features gives us the flexibility to output to any given channel. Generally, we try to not use the channels at the edge of the spectrum to avoid issues with filtering and roll-off of the transmitter or receiver.


When using the 2x sample rate mode, we specify the number of channels that will be used. However, the actual output signal will be twice this number of channels. This is mainly important to know when setting the channel map. For M channels, the channel mapping can specy from 0 to 2M-1 channels to output onto.


For more details about this and the concepts of reconstruction filtering, see:

Constructor Specific Documentation:

Build the polyphase synthesis filterbank.

Args:
    numchans : (unsigned integer) Specifies the number of channels
    <ref refid="interpolator__taps_8h_1a52d84e18f5f0d5d94f4531caf64dde98" kindref="member">taps</ref> : (vector/list of floats) The prototype filter to populate the filterbank.
    twox : (bool) use 2x oversampling or not (default is no))doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" line="18" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pfb__synthesizer__ccf__pydoc_8h_1a6731418e64e123fdfc8a7dbce4d28e36" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_filter_pfb_synthesizer_ccf_pfb_synthesizer_ccf_0</definition>
        <argsstring></argsstring>
        <name>__doc_gr_filter_pfb_synthesizer_ccf_pfb_synthesizer_ccf_0</name>
        <initializer>=
    R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" line="44" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pfb__synthesizer__ccf__pydoc_8h_1a1b9ea6eb0579e3f509feb76957e5ec02" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_filter_pfb_synthesizer_ccf_pfb_synthesizer_ccf_1</definition>
        <argsstring></argsstring>
        <name>__doc_gr_filter_pfb_synthesizer_ccf_pfb_synthesizer_ccf_1</name>
        <initializer>=
    R&quot;doc()doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" line="48" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pfb__synthesizer__ccf__pydoc_8h_1a4ffc7528d08939b3c6652c578965bad5" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_filter_pfb_synthesizer_ccf_make</definition>
        <argsstring></argsstring>
        <name>__doc_gr_filter_pfb_synthesizer_ccf_make</name>
        <initializer>= R&quot;doc(Polyphase synthesis filterbank with <ref refid="gr__complex_8h_1aec4bfe41433369afae9327f1b0bc9109" kindref="member">gr_complex</ref> input, <ref refid="gr__complex_8h_1aec4bfe41433369afae9327f1b0bc9109" kindref="member">gr_complex</ref> output and float taps.

The PFB synthesis filterbank combines multiple baseband signals into a single channelized signal. Each input stream is, essentially, modulated onto an output channel according the the channel mapping (see set_channel_map for details).


Setting this filterbank up means selecting the number of output channels, the prototype filter, and whether to handle channels at 2x the sample rate (this is generally used only for reconstruction filtering).


The number of channels sets the maximum number of channels to use, but not all input streams must be connected. For M total channels, we can connect inputs 0 to N where N &lt; M-1. Because of the way GNU Radio handles stream connections, we must connect the channels consecutively, and so we must use the set_channel_map if the desired output channels are not the same as the the default mapping. This features gives us the flexibility to output to any given channel. Generally, we try to not use the channels at the edge of the spectrum to avoid issues with filtering and roll-off of the transmitter or receiver.


When using the 2x sample rate mode, we specify the number of channels that will be used. However, the actual output signal will be twice this number of channels. This is mainly important to know when setting the channel map. For M channels, the channel mapping can specy from 0 to 2M-1 channels to output onto.


For more details about this and the concepts of reconstruction filtering, see:

Constructor Specific Documentation:

Build the polyphase synthesis filterbank.

Args:
    numchans : (unsigned integer) Specifies the number of channels
    <ref refid="interpolator__taps_8h_1a52d84e18f5f0d5d94f4531caf64dde98" kindref="member">taps</ref> : (vector/list of floats) The prototype filter to populate the filterbank.
    twox : (bool) use 2x oversampling or not (default is no))doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" line="52" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pfb__synthesizer__ccf__pydoc_8h_1aaad4de24f87a752a42fdb090f5b01eff" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_filter_pfb_synthesizer_ccf_set_taps</definition>
        <argsstring></argsstring>
        <name>__doc_gr_filter_pfb_synthesizer_ccf_set_taps</name>
        <initializer>= R&quot;doc(Resets the filterbank&apos;s filter <ref refid="interpolator__taps_8h_1a52d84e18f5f0d5d94f4531caf64dde98" kindref="member">taps</ref> with the new prototype filter)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" line="78" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pfb__synthesizer__ccf__pydoc_8h_1a373879d2f15f24fb72860219a0e317fe" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_filter_pfb_synthesizer_ccf_print_taps</definition>
        <argsstring></argsstring>
        <name>__doc_gr_filter_pfb_synthesizer_ccf_print_taps</name>
        <initializer>= R&quot;doc(Print all of the filterbank <ref refid="interpolator__taps_8h_1a52d84e18f5f0d5d94f4531caf64dde98" kindref="member">taps</ref> to screen.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" line="81" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pfb__synthesizer__ccf__pydoc_8h_1a777d3a0351c6eac0da73eff4832f95af" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_filter_pfb_synthesizer_ccf_taps</definition>
        <argsstring></argsstring>
        <name>__doc_gr_filter_pfb_synthesizer_ccf_taps</name>
        <initializer>= R&quot;doc(Return a vector&lt;vector&lt;&gt;&gt; of the filterbank <ref refid="interpolator__taps_8h_1a52d84e18f5f0d5d94f4531caf64dde98" kindref="member">taps</ref>)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" line="84" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pfb__synthesizer__ccf__pydoc_8h_1ae999482725868120145905ba7e3a2f39" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_filter_pfb_synthesizer_ccf_set_channel_map</definition>
        <argsstring></argsstring>
        <name>__doc_gr_filter_pfb_synthesizer_ccf_set_channel_map</name>
        <initializer>= R&quot;doc(Set the channel map. Channels are numbers as: 


So input stream 0 goes to channel 0, etc. Setting a new channel map allows the user to specify where in frequency he/she wants the input stream to go. This is especially useful to avoid putting signals into the channels on the edge of the spectrum which can either wrap around (in the case of odd number of channels) and be affected by filter rolloff in the transmitter.


The map must be at least the number of streams being sent to the block. Less and the algorithm will not have enough data to properly setup the buffers. Any more channels specified will be ignored.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" line="87" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pfb__synthesizer__ccf__pydoc_8h_1a7de6e849a561e0a629d2fb466fab2784" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __doc_gr_filter_pfb_synthesizer_ccf_channel_map</definition>
        <argsstring></argsstring>
        <name>__doc_gr_filter_pfb_synthesizer_ccf_channel_map</name>
        <initializer>= R&quot;doc(Gets the current channel map.)doc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" line="96" column="19" bodyfile="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h" bodystart="96" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/desktop2/gnuradio/build/gr-filter/python/filter/bindings/pfb_synthesizer_ccf_pydoc.h"/>
  </compounddef>
</doxygen>
